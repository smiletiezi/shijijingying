<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.py.shijijingying.dao.MyVoucherDao">
  <resultMap id="BaseResultMap" type="com.py.shijijingying.entity.MyVoucher">
    <id column="my_voucher_id" jdbcType="INTEGER" property="myVoucherId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="voucher_id" jdbcType="INTEGER" property="voucherId" />
    <result column="voucher_use" jdbcType="VARCHAR" property="voucherUse" />
    <result column="voucher_overdue" jdbcType="VARCHAR" property="voucherOverdue" />
  </resultMap>
  <sql id="Base_Column_List">
    my_voucher_id,user_id,voucher_id,voucher_use,voucher_overdue
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from my_voucher
    where my_voucher_id = #{myVoucherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from my_voucher
    where my_voucher_id = #{myVoucherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="tradingRecordId" parameterType="com.py.shijijingying.entity.MyVoucher">
    insert into my_voucher (my_voucher_id,user_id,voucher_id,voucher_use,voucher_overdue)
    values (#{myVoucherId,jdbcType=INTEGER},
               #{userId,jdbcType=INTEGER}, 
               #{voucherId,jdbcType=INTEGER}, 
               #{voucherUse,jdbcType=VARCHAR},
               #{voucherOverdue,jdbcType=VARCHAR}
               )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="tradingRecordId" parameterType="com.py.shijijingying.entity.MyVoucher">
    insert into my_voucher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="myVoucherId != null">
        my_voucher_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="voucherId != null">
        voucher_id,
      </if>
      <if test="voucherUse != null">
        voucher_use,
      </if>
      <if test="voucherOverdue != null">
        voucher_overdue
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="myVoucherId != null">
        #{myVoucherId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="voucherId != null">
        #{voucherId,jdbcType=INTEGER},
      </if>
      <if test="voucherUse != null">
        #{voucherUse,jdbcType=VARCHAR},
      </if>
      <if test="voucherOverdue != null">
        #{voucherOverdue,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.py.shijijingying.entity.MyVoucher">
    update my_voucher
    <set>
      <if test="myVoucherId != null">
        my_voucher_id=#{myVoucherId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id=#{userId,jdbcType=INTEGER},
      </if>
      <if test="voucherId != null">
        voucher_id=#{voucherId,jdbcType=INTEGER},
      </if>
      <if test="voucherUse != null">
       voucher_use= #{voucherUse,jdbcType=VARCHAR},
      </if>
      <if test="voucherOverdue != null">
       voucher_overdue= #{voucherOverdue,jdbcType=VARCHAR}
      </if>
    </set>
    where my_voucher_id = #{myVoucherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.py.shijijingying.entity.MyVoucher">
    update my_voucher
    set  my_voucher_id=#{myVoucherId,jdbcType=INTEGER},
       user_id=#{userId,jdbcType=INTEGER},
      voucher_id=#{voucherId,jdbcType=INTEGER},
     voucher_use= #{voucherUse,jdbcType=VARCHAR},
      voucher_overdue= #{voucherOverdue,jdbcType=VARCHAR}
    where my_voucher_id=#{myVoucherId,jdbcType=INTEGER}
  </update>
   <select id="selectByExample" parameterType="com.py.shijijingying.entity.MyVoucher" resultMap="BaseResultMap">
    select
  	<include refid="Base_Column_List" />
    from my_voucher
    where 1=1
    	<if test="myVoucherId != null">
        and my_voucher_id=#{myVoucherId,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
        and user_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="voucherId != null">
       and  voucher_id=#{voucherId,jdbcType=INTEGER}
      </if>
      <if test="voucherUse != null">
       and voucher_use= #{voucherUse,jdbcType=VARCHAR}
      </if>
      <if test="voucherOverdue != null">
      and  voucher_overdue= #{voucherOverdue,jdbcType=VARCHAR}
      </if>
      order by my_voucher_id desc
  </select>
  
</mapper>